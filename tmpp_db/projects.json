{
    "projects": [
        {
            "name": "Microservices Video to MP3 Converter",
            "description": "Engineered a distributed system for converting video files to MP3 format using microservices architecture with secure JWT user authentication, message queuing, scalable storage, and notifications.",
            "start_date": "09/2024",
            "end_date": "09/2024",
            "reference_context": [
                "Implemented secure JWT user authentication",
                "Utilized RabbitMQ for message queuing",
                "Employed Docker and Kubernetes for container management"
            ],
            "skills": [
                "Python",
                "Docker",
                "Kubernetes",
                "RabbitMQ",
                "MongoDB"
            ],
            "tags": [
                "Microservices",
                "Video Conversion",
                "Distributed Systems"
            ]
        },
        {
            "name": "Kafka Confluent Cloud Pub-Sub",
            "description": "Implemented Apache Kafka producers/consumers using Confluent Cloud with topic management, data serialization. Demonstrated cross-platform compatibility through a containerized multi-language environment.",
            "start_date": "09/2024",
            "end_date": "09/2024",
            "reference_context": [
                "Integrated Kafka with Java, Python, Go, Node.js",
                "Used Spring Boot for backend services",
                "Deployed on Docker"
            ],
            "skills": [
                "Kafka",
                "Java",
                "Python",
                "Go",
                "Node.js",
                "Spring Boot",
                "Docker"
            ],
            "tags": [
                "Pub-Sub System",
                "Cloud Integration",
                "Containerization"
            ]
        },
        {
            "name": "Classic To-Do List",
            "description": "Developed a full-stack task manager web app with CRUD operations using React and Go, deployed on AWS with GraphQL API for efficient data retrieval.",
            "start_date": "08/2024",
            "end_date": "08/2024",
            "reference_context": [
                "Implemented CRUD operations",
                "Deployed on AWS EC2",
                "Utilized PostgreSQL database"
            ],
            "skills": [
                "React",
                "Go",
                "GraphQL",
                "AWS EC2",
                "PostgreSQL"
            ],
            "tags": [
                "Task Manager",
                "Full-Stack Development",
                "Web Application"
            ]
        },
        {
            "name": "Voice AI Interviewer Agent",
            "description": "Engineered an AI-powered voice interviewer leveraging Groq for fast inference and Vapi for voice interactions, with Supabase for authentication and storage.",
            "start_date": "07/2024",
            "end_date": "07/2024",
            "reference_context": [
                "Used TypeScript and NextJS for front-end",
                "Integrated Supabase for backend storage",
                "Leveraged Groq for AI model inference"
            ],
            "skills": [
                "TypeScript",
                "NextJS",
                "Vapi",
                "Supabase",
                "Groq"
            ],
            "tags": [
                "AI Voice Agent",
                "Generative AI",
                "Interview Simulation"
            ]
        },
        {
            "name": "Cloud-based Video Face Recognition App",
            "description": "Designed a 3-tier hybrid cloud architecture leveraging AWS and OpenStack for integration across Web, App, and Data tiers, with support for Python scripts to trigger cloud functions.",
            "start_date": "02/2023",
            "end_date": "04/2023",
            "reference_context": [
                "Developed Python scripts for AWS services",
                "Auto-scaled EC2 instances via SQS and Cloudwatch",
                "Employed Flask for API development"
            ],
            "skills": [
                "AWS",
                "Python",
                "Flask",
                "Docker",
                "OpenStack"
            ],
            "tags": [
                "Face Recognition",
                "Cloud Architecture",
                "Python Scripting"
            ]
        }
    ],
    "tags": [
        "Software Development",
        "Cloud Integration",
        "Microservices",
        "AI",
        "DevOps"
    ]
}